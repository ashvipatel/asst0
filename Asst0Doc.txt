asst0					simpleCSVsort						asst0


DESIGN/GAME PLAN

	File Structure.
	
		Asst0Doc.tx

		test input CSV file(s)
		test output CVS file(s)

		Makefile


		simpleCSVsort.c
			include libraries and header file
			main function
			ETC ... ?

		simpleCSVsort.h
			define macros (STDIN, STDOUT, STDERR, etc...)
			define struct "record" corresponding to each row of the CSV
			include libraries (mergesort.c)
			printCSV( ) function ??
			ETC ... ?

		mergesort.c
			mergesort aort function
				attempt to make it protable w/ function pointers?


	simpleCSVsort.c

		main()
			error check commnd line arguments
				set stderr appropriately and exit if arguments incorrect || !match
				else continue

			set char* key_type <-- argv[2]
			init record* head

			call readCSV()
			call mergesort()
			call printCSV()
			call clearCSV()

	simpleCSVsort.h

		#define STDIN 0
		#define STDOUT 1
		#define STDERR 2

		typedef enum _boolean { TRUE = 1, FLASE = 0} boolean;

		struct record { void* key, entire_record_formatted, record * next }

		int readCSV( STDIN, list_of_records* head, char* key_type )
			reads the CSV file from STDIN and builds a LinkedLisk of records: one record per line
			returns 1 if successful
			else write to STDERR and return 0 

		int writetoSTDOUT(list_of_records* head )
			head pointed to a linked list which represents a CSV
			writes the CSV to STDOUT
			returns 1 if successful
			else returns 0

		int writeCSV( char* file_name, list_of_records* head )
			writes the CSV to file file_name in the current working directory
			returns 1 if successful
			else returns 0

		int clear_LL(list_of_records* head)
			frees memory allocated for linked list pointed to by head
			returns 1 is successful
			else returns 0

	mergesort.h

		int mergesort(list_of_records*)
			driver function for merge sort
			returns 1 on success
			else returns 0

		int partition( ... )
		

		int merge( ... )
		




















